generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "../node_modules/@prisma/client/zod"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model CacheEntry {
  key       String   @id @db.VarChar(512)
  value     String
  updatedAt DateTime @updatedAt
}

model Repository {
  // Corresponds to GitHub's id; useful to keep as a foreign key to Pinecone
  id          Int    @id /// z.number().int().min(0) 
  owner       String @db.VarChar(100) /// z.string().min(1).max(100)
  name        String @db.VarChar(100) /// z.string().min(1).max(100)
  description String @db.VarChar(500) /// z.string().min(0).max(500)
  readme      String @db.VarChar(2000) /// z.string().min(0).max(2000)

  url                   String   @db.VarChar(256) /// z.string().url()
  impactScore           Float /// z.number().float().positive().min(0).max(1)
  numStars              Int /// z.number().int().positive().min(0)
  numIssues             Int /// z.number().int().positive().min(0)
  numGoodFirstIssues    Int /// z.number().int().positive().min(0)
  lastActivityTimestamp DateTime /// z.date().min(new Date(2000, 1, 1))
  topics                String[]

  updatedAt DateTime @default(now()) @updatedAt
}
